* NixOS configuration file
:PROPERTIES:
:ID:       75ac1874-d700-4e66-9058-fa8753cf3e7c
:END:

** NixOS
*** Asus eee
:PROPERTIES:
:ID:       0c800508-a040-431f-87f1-853cec936c1d
:END:
#+begin_src nix :noweb yes :tangle asus-eee-configuration.nix
{ config, pkgs, ... }:

{
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.config.allowTexliveBuilds = true;
    nixpkgs.system = "x86_64-linux";
    programs.zsh.enable = true;

    imports =
        [ # Include the results of the hardware scan.
            /etc/nixos/hardware-configuration.nix
        ];


        boot.loader.grub.enable = true;
        boot.loader.grub.version = 2;
        # Define on which hard drive you want to install Grub.
        boot.loader.grub.device = "/dev/sda";

        networking = {
            hostName = "asus-eee-nixos";
            hostId = "6f8f7d5f";
        };

        # Select internationalisation properties.
        # i18n = {
        #   consoleFont = "lat9w-16";
        #   consoleKeyMap = "us";
        #   defaultLocale = "en_US.UTF-8";
        # };

        environment = {
            systemPackages = with pkgs; [
                <<basic>>
                <<haskell>>
                <<latex>>
                <<xmonad-apps>>
                x11vnc
            ];

            shellAliases = {
                <<shell-aliases>>
            };

            interactiveShellInit = ''
            <<interactive-shell-init>>
            '';
        };

        services = {
            <<services>>
        };

        users.defaultUserShell = "/run/current-system/sw/bin/zsh";
        users.extraUsers.amitai = {
            <<users>>
        };

        powerManagement = {
            enable = true;
            cpuFreqGovernor = "ondemand";
        };

}
#+end_src
*** Asus Laptop
:PROPERTIES:
:ID:       29b02e0a-9aa8-4d5d-8d5a-43ac7b5c1735
:END:
#+begin_src nix :noweb yes :tangle asus-configuration.nix
{ pkgs, config, ... }: {
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.config.allowTexliveBuilds = true;
    nixpkgs.system = "x86_64-linux";
    nix.maxJobs = 1;
    programs.zsh.enable = true;

    imports = [
        <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

    hardware = {
        <<hardware>>
    };

    boot = {
        <<boot>>
    };

    fileSystems = {
        <<root>>

        "/home/amitai/data1" = {
            device = "/dev/disk/by-label/Data1";
            fsType = "ntfs";
        };

        "/home/amitai/data2" = {
            device = "/dev/disk/by-label/Data2";
            fsType = "ntfs";
        };
    };

    swapDevices = [
        {
            label = "swap";
        }
    ];

    services = {
        <<services>>
    };

    users.defaultUserShell = "/run/current-system/sw/bin/zsh";
    users.extraUsers.amitai = {
        <<users>>
    };

    powerManagement = {
        enable = true;
        cpuFreqGovernor = "ondemand";
    };

    environment = {
        systemPackages = with pkgs; [
            <<basic>>
            <<xmonad-apps>>
            <<games>>
            <<command-line-tools>>
            <<nix-tools>>
            <<misc>>
            <<media-editors>>
            <<latex>>
            <<interpreters>>
            <<haskell>>
            <<java>>
            <<ides>>
            <<math>>
            <<system-tools>>
            <<ruby-gems>>
        ];

        shellAliases = {
            <<shell-aliases>>
        };

        interactiveShellInit = ''
        <<interactive-shell-init>>
        '';
    };

    fonts = {
        enableFontDir = true;
        enableGhostscriptFonts = true;
        fonts = with pkgs; [
            <<fonts>>
        ];
    };
}
#+end_src
*** Basic Installation
:PROPERTIES:
:ID:       7f85168a-82ff-47da-9ecc-1939025e05d5
:END:
#+begin_src nix :noweb yes :tangle basic-configuration.nix
{ pkgs, config, ... }: {
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.system = "x86_64-linux";
    programs.zsh.enable = true;

    imports =
        [ # Include the results of the hardware scan.
            /etc/nixos/hardware-configuration.nix
        ];

        boot = {
            extraModprobeConfig = ''
            options snd slots=snd-hda-intel
            '';
            loader.grub = {
                enable = true;
                version = 2;
                #device = "/dev/sda1";
                device = "nodev";
                memtest86.enable = false;
            };
        };

        networking = {
            hostName = "basic-nixos";
            wireless.enable = true;
        };

        swapDevices = [
            {
                label = "swap";
            }
        ];

        services = {
            <<services>>
        };

        users.defaultUserShell = "/run/current-system/sw/bin/zsh";
        users.extraUsers.amitai = {
            <<users>>
        };

        powerManagement = {
            enable = true;
            cpuFreqGovernor = "ondemand";
        };

        environment = {
            systemPackages = with pkgs; [
                <<basic>>
            ];

            shellAliases = {
                <<shell-aliases>>
            };

            interactiveShellInit = ''
            <<interactive-shell-init>>
            '';
        };

        fonts = {
            enableFontDir = true;
            enableGhostscriptFonts = true;
            fonts = with pkgs; [
                <<fonts>>
            ];
        };
}
#+end_src
*** Ippon Desktop
:PROPERTIES:
:ID:       29b02e0a-9aa8-4d5d-8d5a-43ac7b5c1735
:END:
#+begin_src nix :noweb yes :tangle ippon-configuration.nix
{ pkgs, config, ... }: {
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.system = "x86_64-linux";
    programs.zsh.enable = true;

    imports =
        [ # Include the results of the hardware scan.
            /etc/nixos/hardware-configuration.nix
        ];

        boot = {
            extraModprobeConfig = ''
            options snd slots=snd-hda-intel
            '';
            loader.grub = {
                enable = true;
                version = 2;
                #device = "/dev/sda1";
                device = "nodev";
                memtest86.enable = false;
            };
        };

        networking = {
            hostName = "ippon-nixos";
            wireless.enable = true;
        };

        swapDevices = [
            {
                label = "swap";
            }
        ];

        services = {
            <<services>>
        };

        users.defaultUserShell = "/run/current-system/sw/bin/zsh";
        users.extraUsers.amitai = {
            <<users>>
        };

        environment = {
            systemPackages = with pkgs; [
                <<basic>>
                <<xmonad-apps>>
                inkscape
            ];

            shellAliases = {
                <<shell-aliases>>
            };

            interactiveShellInit = ''
            <<interactive-shell-init>>
            '';
        };

        fonts = {
            enableFontDir = true;
            enableGhostscriptFonts = true;
            fonts = with pkgs; [
                <<fonts>>
            ];
        };
}
#+end_src
*** Lenovo Laptop
:PROPERTIES:
:ID:       29b02e0a-9aa8-4d5d-8d5a-43ac7b5c1735
:END:
#+begin_src nix :noweb yes :tangle lenovo-configuration.nix
{ pkgs, config, ... }: {
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.config.allowTexliveBuilds = true;
    nixpkgs.system = "x86_64-linux";
    programs.zsh.enable = true;

    imports =
        [ # Include the results of the hardware scan.
            /etc/nixos/hardware-configuration.nix
        ];

        boot = {
            extraModprobeConfig = ''
            options snd slots=snd-hda-intel
            '';
            loader.grub = {
                enable = true;
                version = 2;
                #device = "/dev/sda1";
                device = "nodev";
                memtest86.enable = false;
            };
        };

        networking = {
            hostName = "lenovo-laptop-nixos";
            wireless.enable = true;
        };

        swapDevices = [
            {
                label = "swap";
            }
        ];

        services = {
            <<services>>
        };

        users.defaultUserShell = "/run/current-system/sw/bin/zsh";
        users.extraUsers.amitai = {
            <<users>>
        };

        powerManagement = {
            enable = true;
            cpuFreqGovernor = "ondemand";
        };

        environment = {
            systemPackages = with pkgs; [
                <<basic>>
                <<xmonad-apps>>
                <<games>>
                <<command-line-tools>>
                <<nix-tools>>
                <<misc>>
                <<media-editors>>
                <<latex>>
                <<interpreters>>
                <<haskell>>
                <<java>>
                <<ides>>
                <<math>>
                <<system-tools>>
                <<ruby-gems>>
                mplayer
            ];

            shellAliases = {
                <<shell-aliases>>
            };

            interactiveShellInit = ''
            <<interactive-shell-init>>
            '';
        };

        fonts = {
            enableFontDir = true;
            enableGhostscriptFonts = true;
            fonts = with pkgs; [
                <<fonts>>
            ];
        };
}
#+end_src
*** IBM ThinkPad
:PROPERTIES:
:ID:       2eb4e603-f93b-44b2-bb7b-e0e974c9eb1d
:END:
#+begin_src nix :noweb yes :tangle ibm-configuration.nix
{ pkgs, config, ... }: {
    nixpkgs.config.allowUnfree = true;
    nixpkgs.config.allowBroken = true;
    nixpkgs.system = "i686-linux";
    programs.zsh.enable = true;

    imports =
        [ # Include the results of the hardware scan.
            /etc/nixos/hardware-configuration.nix
        ];

        boot = {
            extraModprobeConfig = ''
            options snd slots=snd-hda-intel
            '';
            loader.grub = {
                enable = true;
                version = 2;
                device = "/dev/sda";
                memtest86.enable = false;
            };
        };

        networking = {
            hostName = "ibm-thinkpad-nixos";
            wireless.enable = true;
        };

        fileSystems = {
            <<root>>
        };

        swapDevices = [
            {
                label = "swap";
            }
        ];

        services = {
            <<services>>
        };

        users.defaultUserShell = "/run/current-system/sw/bin/zsh";
        users.extraUsers.amitai = {
            <<users>>
        };

        powerManagement = {
            enable = true;
            cpuFreqGovernor = "ondemand";
        };

        environment = {
            systemPackages = with pkgs; [
                <<basic>>
                <<xmonad-apps>>
                <<games>>
            ];

            shellAliases = {
                <<shell-aliases>>
            };

            interactiveShellInit = ''
            <<interactive-shell-init>>
            '';
        };

        fonts = {
            enableFontDir = true;
            enableGhostscriptFonts = true;
            fonts = with pkgs; [
                <<fonts>>
            ];
        };
}
#+end_src
** Nix package manager
*** Ubuntu
**** Lenovo
:PROPERTIES:
:ID:       22d8e589-c901-47f7-8c31-1d66bdd58305
:END:
#+begin_src nix :noweb yes :tangle lenovo-pkgs.nix
with import <nixpkgs> {}; [ 
    <<basic>>
]
#+end_src
**** Toshiba
:PROPERTIES:
:ID:       9a2670f6-2e9e-48c5-bed4-8be229414af0
:END:
#+begin_src nix :noweb yes :tangle toshiba-pkgs.nix
with import <nixpkgs> {}; [ 
    <<basic>>
    <<haskell>>
    <<latex>>
]
#+end_src
**** Ippon
:PROPERTIES:
:ID:       9076dbb4-73ed-4a17-ac00-93ba7eb1f259
:END:
#+begin_src nix :noweb yes :tangle ippon-pkgs.nix
with import <nixpkgs> {}; [ 
    <<basic>>
]
#+end_src
**** Asus
:PROPERTIES:
:ID:       1133f3e0-34ea-433e-9a86-d0e835cda0c9
:END:
#+begin_src nix :noweb yes :tangle asus-pkgs.nix
with import <nixpkgs> {}; [ 
    <<basic>>
    #easytag # Currently has a bug saving unicode
    python34Packages.mutagen
]
#+end_src
*** Mini-Mac
:PROPERTIES:
:ID:       15682c74-afc4-45cb-9f3f-0cb2bf3d70c7
:END:
#+begin_src nix :noweb yes :tangle mini-mac-pkgs.nix
with import <nixpkgs> {}; [ 
    #dropbox
    #synergy
    keepassx
    unison
]
#+end_src
** Source blocks
*** Boot
:PROPERTIES:
:ID:       42d050f5-cf82-48e0-bf93-ba85ea73c62a
:END:

#+name: boot
#+begin_src nix
initrd = {
    kernelModules = [ "ahci" "aesni-intel" "fbcon" "i915" ];
    availableKernelModules = [ "scsi_wait_scan" ];
};

kernelModules = [ "kvm-intel" "msr" ];

extraModprobeConfig = ''
options snd_hda_intel mode=auto power_save=1 index=1
'';


#blacklistedKernelModules = [ "snd_pcsp" "pcspkr" ];

loader.grub = {
    enable = true;
    version = 2;
    #device = "/dev/sda1";
    device = "nodev";
    memtest86.enable = false;
};
#+end_src
*** File Systems
:PROPERTIES:
:ID:       7090625a-05d9-46ae-9ee4-e5f12596bbe8
:END:

#+name: root
#+begin_src nix
"/" = {
    device = "/dev/disk/by-label/nixos";
    fsType = "ext4";
    options = "defaults,noatime,discard";
};
#+end_src
*** Fonts
:PROPERTIES:
:ID:       738d5a2e-4d36-48a6-8a58-633a018ade65
:END:

#+name: fonts
#+begin_src nix
corefonts  # Micrsoft free fonts
inconsolata  # monospaced
ubuntu_font_family  # Ubuntu fonts
cm_unicode
#+end_src

*** Hardware 
:PROPERTIES:
:ID:       ffe178bc-3002-4027-99f7-0c2fb4145164
:END:

#+name: hardware
#+begin_src nix
bluetooth.enable = true;
pulseaudio.enable = true;
cpu.intel.updateMicrocode = true;
opengl.s3tcSupport = true;

bumblebee = {
    enable = true;
    group = "video";
};
#+end_src
*** Packages
:PROPERTIES:
:ID:       1412ee13-ec78-44a0-8fba-a73e2e4254a8
:END:
**** Basic
:PROPERTIES:
:ID:       8bef2816-a5ef-4cd1-bed2-bd27c4b419f3
:END:

#+name: basic
#+begin_src nix
gnome3.nautilus
chromium
dropbox-cli
emacs
keepassx
kde4.kmymoney
git
gitAndTools.git-annex
gnupg
meld
aria
youtube-dl
telegram-cli
pandoc
gparted
kde4.filelight
unetbootin
xsel
xclip
unrar
zip
unzip
evince
#+end_src
**** Command line tools
:PROPERTIES:
:ID:       6d4cb55a-9ca1-48bb-bfa1-a3205ca18f74
:END:

#+name: command-line-tools
#+begin_src nix
bc
binutils
#unoconv
#+end_src
**** Development
***** Interperters
:PROPERTIES:
:ID:       faedc95b-2217-4ed3-b57f-2883be76039b
:END:

#+name: interpreters
#+begin_src nix
python
#expect
#tcl
#+end_src
***** Haskell
:PROPERTIES:
:ID:       740595ff-da44-41c5-88fb-728d45e5405f
:END:

#+name: haskell
#+begin_src nix
(haskellngPackages.ghcWithPackages
 (self : with self;
  [ pipes
    hint
    cabal-install
    diagrams diagrams-cairo diagrams-builder
    shelly
    random
    HaskellForMaths
    matrix
    aeson-pretty
    # htoml # not working meanwhile
    HaTeX
    # yi
    xmobar
    xmonad
    # xmonad-contrib
    # xmonad-extras
  ] ))
#+end_src
***** Java
:PROPERTIES:
:ID:       799576a9-527e-44d7-8e4f-e25446a4c414
:END:

#+name: java
#+begin_src nix
#oraclejdk8
#+end_src
***** Editors and IDEs
:PROPERTIES:
:ID:       5419fb15-5f0c-42d7-a54b-59df0ccf5883
:END:

#+name: ides
#+begin_src nix
#idea.android-studio
#atom
#+end_src
**** Games
:PROPERTIES:
:ID:       0305e0e0-298e-41cf-913a-88184364cd4b
:END:

#+name: games
#+begin_src nix
#rili
#kde4.ktuberling
# kde4.klines
# kde4.pairs
# asc
# bullet
#+end_src
**** KDE 4
#+name: kde4
#+begin_src nix
kmix
networkmanagement
gwenview
ksnapshot
#+end_src
**** Latex
:PROPERTIES:
:ID:       d41b3e36-9c2f-48ef-9b73-b9de3e4a4625
:END:

#+name: latex
#+begin_src nix
(texLiveAggregationFun { paths = [ texLive texLiveExtra texLiveBeamer ]; })
#+end_src
**** Math
:PROPERTIES:
:ID:       7858ac8d-1d4d-4f39-ae7d-4bb2d66d0b04
:END:

#+name: math
#+begin_src nix
octave
#maxima
#+end_src
**** Media
***** Editors
:PROPERTIES:
:ID:       30913cba-cd57-4fba-a2c2-cbd56bf40413
:END:

#+name: media-editors
#+begin_src nix
#darktable
#gimp
#xournal
#kde4.kolourpaint
#pinta
#subtitleeditor
#aegisub
imagemagick
#libreoffice
#dia
#+end_src
**** Misc
:PROPERTIES:
:ID:       384d7586-b0f5-4a5e-93d4-5924db7d8e92
:END:

#+name: misc
#+begin_src nix
#commonsCompress
#dvdisaster
#synergy
#kde4.k3b
#linuxPackages.virtualbox
#+end_src
**** Nix tools
:PROPERTIES:
:ID:       e27cd13d-be27-430e-a245-d8e9309dd329
:END:

#+name: nix-tools
#+begin_src nix
nox
nix-prefetch-scripts
nix-repl
#+end_src
**** Ruby Gems
#+name: ruby-gems
#+begin_src nix
#ruby
#bundix
#taskjuggler
#+end_src
**** System Tools
:PROPERTIES:
:ID:       0dfede89-a46e-4a91-bf36-b4da96838561
:END:

#+name: system-tools
#+begin_src nix
#bluez
#blueman
#+end_src
**** XFCE
#+name: xfce
#+begin_src nix
xfce4taskmanager
#+end_src
**** Xmonad Apps
#+name: xmonad-apps
#+begin_src nix
scrot
gpicview
dmenu
kde4.konsole
#+end_src
*** Services
#+name: services
#+begin_src nix
acpid.enable = true;
upower.enable = true;

xserver = {
    enable = true;
    windowManager.xmonad.enable = true;
    windowManager.xmonad.enableContribAndExtras = true;
    windowManager.default = "xmonad";
    desktopManager.xterm.enable = false;
    desktopManager.default = "none";
};
#+end_src
*** Services (Old)
:PROPERTIES:
:ID:       e0899a47-aab2-46c7-b4a8-56827a4c9bc1
:END:

#+begin_src nix    
acpid.enable = true;
upower.enable = true;
    
xserver = {
    xkbModel = "asus_laptop";
    xkbOptions = "eurosign:e,terminate:ctrl_alt_bksp";
        
    #videoDrivers = [ "intel" "i965" "nvidia" ];
    vaapiDrivers = [ pkgs.vaapiIntel pkgs.vaapiVdpau ];
        
    resolutions = [{x = 1600; y = 900;}];
    defaultDepth = 24;
        
    synaptics = {
        enable = true;
    };
    enable = true;
    desktopManager.kde4.enable = true;
};
#+end_src
*** Shell init
:PROPERTIES:
:ID:       05ee2d6d-c724-410f-b4b0-4eddba20306d
:END:

#+name: interactive-shell-init
#+begin_src nix
export PATH=/home/amitai/org-mode/haskell/shelly_scripts:$PATH
export PATH=/home/amitai/org-mode/scripts:$PATH
export PATH=/home/amitai/org-mode/tcl:$PATH
export doconSource=/home/amitai/src/docon/docon/source
#export JAVA_HOME=dollar{pkgs.oraclejdk8.home}
#export JAVA_HOME=dollar{pkgs.jdk.home}
#+end_src
*** Users
:PROPERTIES:
:ID:       b1c59348-47f5-42e5-abc3-d8bf1119fe6a
:END:

#+name: users
#+begin_src nix
isNormalUser = true;
home = "/home/amitai";
description = "Amitai Hoze";
extraGroups = [ "wheel" "networkmanager" ];
shell = "/run/current-system/sw/bin/zsh";
#+end_src
